<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<context:property-placeholder location="classpath:application.properties" />
	<context:component-scan base-package="com.rafaj2ee" />

	<!-- DataSource Initialization -->
	<bean id="dataSourceInitializer"
		class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
		<property name="dataSource" ref="dataSource" />
		<property name="databasePopulator">
			<bean
				class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
				<property name="scripts" value="classpath:db/schema.sql" />
			</bean>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<!-- Remova a barra invertida extra -->
		<property name="driverClass"
			value="${spring.datasource.driver-class-name}" />
		<property name="url" value="${spring.datasource.url}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<batch:job id="counterBackupJob">
		<batch:step id="backupStep">
			<batch:tasklet>
				<batch:chunk reader="counterReader" writer="counterWriter"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="counterReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="SELECT id, count, name FROM counter WHERE id = #{jobParameters['id']}" />
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass" value="com.rafaj2ee.model.Counter" />
			</bean>
		</property>
	</bean>

	<bean id="counterWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="INSERT INTO counter_backup (id, count, name) VALUES (:id, :count, :name)" />
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
</beans>
